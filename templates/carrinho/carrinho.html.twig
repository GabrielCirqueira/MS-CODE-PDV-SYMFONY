{% extends 'layout.html.twig' %}

{% block body %}
<div class="container cart-container mt-5">
    <h1 class="titulo page-title">Carrinho</h1>

    <div class="row summary-cards my-4">
        <div class="col-md-4">
            <div class="card text-center card-summary">
                <div class="card-body card-summary-body">
                    <div class="flex summary-flex">Total
                        <div><i class="fas fa-dollar-sign"></i></div>
                    </div>
                    <div class="summary-dash">-</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-center card-summary">
                <div class="card-body card-summary-body">
                    <div class="flex summary-flex">Status
                        <div><i class="fas fa-tag"></i></div>
                    </div>
                    <div class="summary-dash">-</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-center card-summary">
                <div class="card-body card-summary-body">
                    <div class="flex summary-flex">Criação
                        <div><i class="fas fa-calendar"></i></div>
                    </div>
                    <div class="summary-dash">-</div>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-4 client-search-card">
        <div class="card-body client-search-body">
            <h5 class="client-label">Cliente*</h5>
            <div class="input-group client-input-group">
                <input type="text" class="form-control client-input" id="client-search-input"
                    placeholder="Buscar cliente por nome, CPF ou CNPJ...">
                <button id="button-procurar-cliente" class="btn color-btn search-button">Procurar Cliente</button>
            </div>
            <ul class="list-group" id="client-suggestions"
                style="display: none; position: absolute; z-index: 1000; width: 100%;">
            </ul>
        </div>
    </div>

    <div class="card mb-4 product-search-card">
        <div class="card-body product-search-body">
            <h5 class="product-label">Produto*</h5>
            <div class="input-group product-input-group">
                <input disabled type="text" class="form-control product-input" id="product-search-input"
                    placeholder="Buscar produto por nome, código ou categoria...">
                <button id="button-inserir-produto" class="btn color-btn search-button">Inserir Produto</button>
            </div>
            <ul class="list-group" id="product-suggestions"
                style="display: none; position: absolute; z-index: 1000; width: 100%;"></ul>
        </div>
    </div>

    <div class="card mb-4 cart-table-card">
        <div class="card-body">
            <table class="table">
                <thead class="table-light cart-table-head">
                    <tr>
                        <th class="text-center align-middle header-cell">Nome</th>
                        <th class="text-center align-middle header-cell">Categoria</th>
                        <th class="text-center align-middle header-cell">Estoque</th>
                        <th class="text-center align-middle header-cell">Valor/Un.</th>
                        <th class="text-center align-middle header-cell">Quantidade</th>
                        <th class="text-center align-middle header-cell">Total</th>
                    </tr>
                </thead>
                <tbody class="cart-table-body">
                    <tr>
                        <td id="linha-mensagem-tabela" colspan="6" class="text-center" >Por favor, selecione um cliente!</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        function configurarBusca(botaoId,entradaId, sugestoesId, apiUrl) {
            const campoEntrada = $(`#${entradaId}`);
            const listaSugestoes = $(`#${sugestoesId}`);
            const butao = $(`#${botaoId}`);

            campoEntrada.on('input', function () {
                const termo = campoEntrada.val().trim();

                if (termo.length < 1) {
                    listaSugestoes.hide();
                    return;
                }

                $.ajax({
                    url: apiUrl,
                    method: 'GET',
                    success: function (dados) {
                        listaSugestoes.empty();
                        const resultados = dados.filter(function (item) {
                            return item.nome.toLowerCase().includes(termo.toLowerCase());
                        });

                        if (resultados.length > 0) {
                            resultados.forEach(function (item) {
                                listaSugestoes.append(`<li class="list-group-item" data-id="${item.id}">${item.nome}</li>`);
                            });
                            listaSugestoes.show();
                            return;
                        }
                        listaSugestoes.hide();
                    },
                    error: function () {
                        console.error("Erro ao buscar dados na API.");
                    }
                });
            });

            listaSugestoes.on('click', '.list-group-item', function () {
                const nomeSelecionado = $(this).text();
                campoEntrada.val(nomeSelecionado);
                butao.val($(this).data('id'));
                listaSugestoes.hide();
            });

            $(document).on('click', function (e) {
                if (!$(e.target).closest(`#${entradaId}`).length && !$(e.target).closest(`#${sugestoesId}`).length) {
                    listaSugestoes.hide();
                }
            });
        }

        configurarBusca('button-procurar-cliente','client-search-input', 'client-suggestions', 'api/clientes');
        configurarBusca('button-inserir-produto','product-search-input', 'product-suggestions', 'api/produtos');

        $('#button-procurar-cliente').click(function() {
            var id = $(this).val();
            
            $.ajax({
                url: '/api/carrinho/' + id,
                type: 'POST',
                success: function(resposta) {
                    if (resposta.status === 'criado' || resposta.status === "existente") {
                        $('#product-search-input').removeAttr('disabled');
                        $('#linha-mensagem-tabela').text('Esse cliente não tem produtos em seu carrinho, selecione um produto!');
                    } else {
                        alert(resposta.message);
                    }
                },
                error: function () {
                    console.error("Erro ao buscar dados na API.");
                }
            });
        });

        $('#button-inserir-produto').click(function(){
            var idProduto = $(this).val();
            
            $.ajax({
                url: '/api/produtos/' + idProduto,
                type: 'GET',
                success: function(produto){
                    $('#linha-mensagem-tabela').hide();
        
                    var produtoExisteTBL = false;
                    $('.cart-table-body tr').each(function(){
                        var nomeProduto = $(this).find('td:eq(0)').text().trim();

                        if (nomeProduto === produto.nome) {
                            produtoExisteTBL = true;
                            var quantidadeAtual = parseInt($(this).find('.quantity-input').val());
                            var novaQuantidade = quantidadeAtual + 1;

                            $(this).find('.quantity-input').val(novaQuantidade);
                            var total = novaQuantidade * produto.valorUnitario;
                            $(this).find('#total-produto').text(formatarValorBR(total));
                            return false;
                        }
                    });
        
                    if (!produtoExisteTBL) {
                        var novaLinha = '<tr>' +
                            '<td class="text-center align-middle item-cell">' + produto.nome + '</td>' +
                            '<td class="text-center align-middle item-cell">' + produto.categoria + '</td>' +
                            '<td class="text-center align-middle item-cell">' + produto.quantidade + '</td>' +
                            '<td class="text-center align-middle item-cell">R$ ' + formatarValorBR(produto.valorUnitario) + '</td>' +
                            '<td class="text-center align-middle item-cell">' +
                                '<input min="1" type="number" value="1" class="quantity-input" name="" id="">' +
                            '</td>' +
                            '<td class="text-center align-middle item-cell" id="total-produto">' + formatarValorBR(produto.valorUnitario) + '</td>' +
                        '</tr>';
        
                        $('.cart-table-body').append(novaLinha);
                        
                        $('.quantity-input').on('input', function() {
                            var quantidade = $(this).val();
                            var total = produto.valorUnitario * quantidade;
                            $(this).closest('tr').find('#total-produto').text('R$ ' + formatarValorBR(total));
                        });
                    }
                }
            });
        });
        
        function formatarValorBR(valor) {
            return new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(valor);
        }
        
    });
</script>


{% endblock %}
